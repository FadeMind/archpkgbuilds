--- a/drivers/acpi/osl.c.old
+++ b/drivers/acpi/osl.c
@@ -142,7 +142,7 @@
 {
 	if (!strcmp("Linux", interface)) {
 
-		printk_once(KERN_NOTICE FW_BUG PREFIX
+		printk_once(KERN_DEBUG FW_BUG PREFIX
 			"BIOS _OSI(Linux) query %s%s\n",
 			osi_linux.enable ? "honored" : "ignored",
 			osi_linux.cmdline ? " via cmdline" :
@@ -560,13 +560,13 @@
 
 	*new_val = NULL;
 	if (!memcmp(init_val->name, "_OS_", 4) && strlen(acpi_os_name)) {
-		printk(KERN_INFO PREFIX "Overriding _OS definition to '%s'\n",
+		printk(KERN_DEBUG PREFIX "Overriding _OS definition to '%s'\n",
 		       acpi_os_name);
 		*new_val = acpi_os_name;
 	}
 
 	if (!memcmp(init_val->name, "_REV", 4) && acpi_rev_override) {
-		printk(KERN_INFO PREFIX "Overriding _REV return value to 5\n");
+		printk(KERN_DEBUG PREFIX "Overriding _REV return value to 5\n");
 		*new_val = (char *)5;
 	}
 
@@ -1436,7 +1436,7 @@
 		return;
 
 	if (str == NULL || *str == '\0') {
-		printk(KERN_INFO PREFIX "_OSI method disabled\n");
+		printk(KERN_DEBUG PREFIX "_OSI method disabled\n");
 		acpi_gbl_create_osi_method = FALSE;
 		return;
 	}
@@ -1494,7 +1494,7 @@
 
 void __init acpi_dmi_osi_linux(int enable, const struct dmi_system_id *d)
 {
-	printk(KERN_NOTICE PREFIX "DMI detected: %s\n", d->ident);
+	printk(KERN_DEBUG PREFIX "DMI detected: %s\n", d->ident);
 
 	if (enable == -1)
 		return;
@@ -1523,7 +1523,7 @@
 		status = acpi_update_interfaces(ACPI_DISABLE_ALL_VENDOR_STRINGS);
 
 		if (ACPI_SUCCESS(status))
-			printk(KERN_INFO PREFIX "Disabled all _OSI OS vendors\n");
+			printk(KERN_DEBUG PREFIX "Disabled all _OSI OS vendors\n");
 	}
 
 	for (i = 0; i < OSI_STRING_ENTRIES_MAX; i++) {
@@ -1536,12 +1536,12 @@
 			status = acpi_install_interface(str);
 
 			if (ACPI_SUCCESS(status))
-				printk(KERN_INFO PREFIX "Added _OSI(%s)\n", str);
+				printk(KERN_DEBUG PREFIX "Added _OSI(%s)\n", str);
 		} else {
 			status = acpi_remove_interface(str);
 
 			if (ACPI_SUCCESS(status))
-				printk(KERN_INFO PREFIX "Deleted _OSI(%s)\n", str);
+				printk(KERN_DEBUG PREFIX "Deleted _OSI(%s)\n", str);
 		}
 	}
 }
@@ -1642,10 +1642,10 @@
 	if (clash) {
 		if (acpi_enforce_resources != ENFORCE_RESOURCES_NO) {
 			if (acpi_enforce_resources == ENFORCE_RESOURCES_LAX)
-				printk(KERN_NOTICE "ACPI: This conflict may"
+				printk(KERN_DEBUG "ACPI: This conflict may"
 				       " cause random problems and system"
 				       " instability\n");
-			printk(KERN_INFO "ACPI: If an ACPI driver is available"
+			printk(KERN_DEBUG "ACPI: If an ACPI driver is available"
 			       " for this device, you should use it instead of"
 			       " the native driver\n");
 		}
@@ -1812,7 +1812,7 @@
 
 static int __init acpi_disable_return_repair(char *s)
 {
-	printk(KERN_NOTICE PREFIX
+	printk(KERN_DEBUG PREFIX
 	       "ACPI: Predefined validation mechanism disabled\n");
 	acpi_gbl_disable_auto_repair = TRUE; 
